{"version":3,"file":"index.es.js","sources":["../src/hooks/useLayoutEffect.tsx","../src/utils.ts","../src/hooks/useSnapPoints.tsx","../src/machines/overlay.ts","../src/BottomSheet.tsx","../src/hooks/useReady.tsx","../src/hooks/useReducedMotion.tsx","../src/hooks/useSpring.tsx","../src/hooks/useScrollLock.tsx","../src/hooks/useAriaHider.tsx","../src/hooks/useFocusTrap.tsx","../src/hooks/useSpringInterpolations.tsx","../src/index.tsx"],"sourcesContent":["import { useEffect, useLayoutEffect as useLayoutEffectSafely } from 'react'\n\n// Ensure the name used in components is useLayoutEffect so the eslint react hooks plugin works\nexport const useLayoutEffect =\n  typeof window !== 'undefined' ? useLayoutEffectSafely : useEffect\n","/* eslint-disable no-self-compare */\n\n// stolen from lodash\nexport function clamp(number: number, lower: number, upper: number) {\n  number = +number\n  lower = +lower\n  upper = +upper\n  lower = lower === lower ? lower : 0\n  upper = upper === upper ? upper : 0\n  if (number === number) {\n    number = number <= upper ? number : upper\n    number = number >= lower ? number : lower\n  }\n  return number\n}\n\n// Mwahaha easiest way to filter out NaN I ever saw! >:3\nexport function deleteNaN(arr) {\n  const set = new Set(arr)\n  set.delete(NaN)\n  return [...set]\n}\n\nexport function roundAndCheckForNaN(unrounded) {\n  const rounded = Math.round(unrounded)\n  if (Number.isNaN(unrounded)) {\n    throw new TypeError(\n      'Found a NaN! Check your snapPoints / defaultSnap / snapTo '\n    )\n  }\n\n  return rounded\n}\n\n// Validate, sanitize, round and dedupe snap points, as well as extracting the minSnap and maxSnap points\nexport function processSnapPoints(unsafeSnaps: number | number[], maxHeight) {\n  const safeSnaps = [].concat(unsafeSnaps).map(roundAndCheckForNaN)\n\n  const snapPointsDedupedSet = safeSnaps.reduce((acc, snapPoint) => {\n    acc.add(clamp(snapPoint, 0, maxHeight))\n    return acc\n  }, new Set<number>())\n\n  const snapPoints = Array.from(snapPointsDedupedSet)\n\n  const minSnap = Math.min(...snapPoints)\n  if (Number.isNaN(minSnap)) {\n    throw new TypeError('minSnap is NaN')\n  }\n  const maxSnap = Math.max(...snapPoints)\n  if (Number.isNaN(maxSnap)) {\n    throw new TypeError('maxSnap is NaN')\n  }\n\n  return {\n    snapPoints,\n    minSnap,\n    maxSnap,\n  }\n}\n\nexport const debugging =\n  process.env.NODE_ENV === 'development' && typeof window !== 'undefined'\n    ? window.location.search === '?debug'\n    : false\n","import React, {\n  useCallback,\n  useDebugValue,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { ResizeObserver, ResizeObserverEntry } from '@juggle/resize-observer'\nimport type { defaultSnapProps, ResizeSource, snapPoints } from '../types'\nimport { processSnapPoints, roundAndCheckForNaN } from '../utils'\nimport { useReady } from './useReady'\nimport { ResizeObserverOptions } from '@juggle/resize-observer/lib/ResizeObserverOptions'\nimport { useLayoutEffect } from './useLayoutEffect'\n\nexport function useSnapPoints({\n  contentRef,\n  controlledMaxHeight,\n  footerEnabled,\n  footerRef,\n  getSnapPoints,\n  headerEnabled,\n  headerRef,\n  heightRef,\n  lastSnapRef,\n  ready,\n  registerReady,\n  resizeSourceRef,\n}: {\n  contentRef: React.RefObject<Element>\n  controlledMaxHeight?: number\n  footerEnabled: boolean\n  footerRef: React.RefObject<Element>\n  getSnapPoints: snapPoints\n  headerEnabled: boolean\n  headerRef: React.RefObject<Element>\n  heightRef: React.RefObject<number>\n  lastSnapRef: React.RefObject<number>\n  ready: boolean\n  registerReady: ReturnType<typeof useReady>['registerReady']\n  resizeSourceRef: React.MutableRefObject<ResizeSource>\n}) {\n  const { maxHeight, minHeight, headerHeight, footerHeight } = useDimensions({\n    contentRef: contentRef,\n    controlledMaxHeight,\n    footerEnabled,\n    footerRef,\n    headerEnabled,\n    headerRef,\n    registerReady,\n    resizeSourceRef,\n  })\n\n  const { snapPoints, minSnap, maxSnap } = processSnapPoints(\n    ready\n      ? getSnapPoints({\n          height: heightRef.current,\n          footerHeight,\n          headerHeight,\n          minHeight,\n          maxHeight,\n        })\n      : [0],\n    maxHeight\n  )\n  //console.log({ snapPoints, minSnap, maxSnap })\n\n  // @TODO investigate the gains from memoizing this\n  function findSnap(\n    numberOrCallback: number | ((state: defaultSnapProps) => number)\n  ) {\n    let unsafeSearch: number\n    if (typeof numberOrCallback === 'function') {\n      unsafeSearch = numberOrCallback({\n        footerHeight,\n        headerHeight,\n        height: heightRef.current,\n        minHeight,\n        maxHeight,\n        snapPoints,\n        lastSnap: lastSnapRef.current,\n      })\n    } else {\n      unsafeSearch = numberOrCallback\n    }\n    const querySnap = roundAndCheckForNaN(unsafeSearch)\n    return snapPoints.reduce(\n      (prev, curr) =>\n        Math.abs(curr - querySnap) < Math.abs(prev - querySnap) ? curr : prev,\n      minSnap\n    )\n  }\n\n  useDebugValue(`minSnap: ${minSnap}, maxSnap:${maxSnap}`)\n\n  return { minSnap, maxSnap, findSnap, maxHeight }\n}\n\nfunction useDimensions({\n  contentRef,\n  controlledMaxHeight,\n  footerEnabled,\n  footerRef,\n  headerEnabled,\n  headerRef,\n  registerReady,\n  resizeSourceRef,\n}: {\n  contentRef: React.RefObject<Element>\n  controlledMaxHeight?: number\n  footerEnabled: boolean\n  footerRef: React.RefObject<Element>\n  headerEnabled: boolean\n  headerRef: React.RefObject<Element>\n  registerReady: ReturnType<typeof useReady>['registerReady']\n  resizeSourceRef: React.MutableRefObject<ResizeSource>\n}) {\n  const setReady = useMemo(() => registerReady('contentHeight'), [\n    registerReady,\n  ])\n  const maxHeight = useMaxHeight(\n    controlledMaxHeight,\n    registerReady,\n    resizeSourceRef\n  )\n\n  // @TODO probably better to forward props instead of checking refs to decide if it's enabled\n  const headerHeight = useElementSizeObserver(headerRef, {\n    label: 'headerHeight',\n    enabled: headerEnabled,\n    resizeSourceRef,\n  })\n  const contentHeight = useElementSizeObserver(contentRef, {\n    label: 'contentHeight',\n    enabled: true,\n    resizeSourceRef,\n  })\n  const footerHeight = useElementSizeObserver(footerRef, {\n    label: 'footerHeight',\n    enabled: footerEnabled,\n    resizeSourceRef,\n  })\n  const minHeight =\n    Math.min(maxHeight - headerHeight - footerHeight, contentHeight) +\n    headerHeight +\n    footerHeight\n\n  useDebugValue(`minHeight: ${minHeight}`)\n\n  const ready = contentHeight > 0\n  useEffect(() => {\n    if (ready) {\n      setReady()\n    }\n  }, [ready, setReady])\n\n  return {\n    maxHeight,\n    minHeight,\n    headerHeight,\n    footerHeight,\n  }\n}\n\nconst observerOptions: ResizeObserverOptions = {\n  // Respond to changes to padding, happens often on iOS when using env(safe-area-inset-bottom)\n  // And the user hides or shows the Safari browser toolbar\n  box: 'border-box',\n}\n/**\n * Hook for determining the size of an element using the Resize Observer API.\n *\n * @param ref - A React ref to an element\n */\nfunction useElementSizeObserver(\n  ref: React.RefObject<Element>,\n  {\n    label,\n    enabled,\n    resizeSourceRef,\n  }: {\n    label: string\n    enabled: boolean\n    resizeSourceRef: React.MutableRefObject<ResizeSource>\n  }\n): number {\n  let [size, setSize] = useState(0)\n\n  useDebugValue(`${label}: ${size}`)\n\n  const handleResize = useCallback(\n    (entries: ResizeObserverEntry[]) => {\n      // we only observe one element, so accessing the first entry here is fine\n      setSize(entries[0].borderBoxSize[0].blockSize)\n      resizeSourceRef.current = 'element'\n    },\n    [resizeSourceRef]\n  )\n\n  useLayoutEffect(() => {\n    if (!ref.current || !enabled) {\n      return\n    }\n\n    const resizeObserver = new ResizeObserver(handleResize)\n    resizeObserver.observe(ref.current, observerOptions)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [ref, handleResize, enabled])\n\n  return enabled ? size : 0\n}\n\n// Blazingly keep track of the current viewport height without blocking the thread, keeping that sweet 60fps on smartphones\nfunction useMaxHeight(\n  controlledMaxHeight,\n  registerReady: ReturnType<typeof useReady>['registerReady'],\n  resizeSourceRef: React.MutableRefObject<ResizeSource>\n) {\n  const setReady = useMemo(() => registerReady('maxHeight'), [registerReady])\n  const [maxHeight, setMaxHeight] = useState(() =>\n    roundAndCheckForNaN(controlledMaxHeight) || typeof window !== 'undefined'\n      ? window.innerHeight\n      : 0\n  )\n  const ready = maxHeight > 0\n  const raf = useRef(0)\n\n  useDebugValue(controlledMaxHeight ? 'controlled' : 'auto')\n\n  useEffect(() => {\n    if (ready) {\n      setReady()\n    }\n  }, [ready, setReady])\n\n  useLayoutEffect(() => {\n    // Bail if the max height is a controlled prop\n    if (controlledMaxHeight) {\n      setMaxHeight(roundAndCheckForNaN(controlledMaxHeight))\n      resizeSourceRef.current = 'maxheightprop'\n\n      return\n    }\n\n    const handleResize = () => {\n      if (raf.current) {\n        // bail to throttle the amount of resize changes\n        return\n      }\n\n      // throttle state changes using rAF\n      raf.current = requestAnimationFrame(() => {\n        setMaxHeight(window.innerHeight)\n        resizeSourceRef.current = 'window'\n\n        raf.current = 0\n      })\n    }\n    window.addEventListener('resize', handleResize)\n    setMaxHeight(window.innerHeight)\n    resizeSourceRef.current = 'window'\n    setReady()\n\n    return () => {\n      window.removeEventListener('resize', handleResize)\n      cancelAnimationFrame(raf.current)\n    }\n  }, [controlledMaxHeight, setReady, resizeSourceRef])\n\n  return maxHeight\n}\n","import { Machine, assign } from 'xstate'\n\n// This is the root machine, composing all the other machines and is the brain of the bottom sheet\n\ninterface OverlayStateSchema {\n  states: {\n    // the overlay usually starts in the closed position\n    closed: {}\n    opening: {\n      states: {\n        // Used to fire off the springStart event\n        start: {}\n        // Decide how to transition to the open state based on what the initialState is\n        transition: {}\n        // Fast enter animation, sheet is open by default\n        immediately: {\n          states: {\n            open: {}\n            activating: {}\n          }\n        }\n        smoothly: {\n          states: {\n            // This state only happens when the overlay should start in an open state, instead of animating from the bottom\n            // openImmediately: {}\n            // visuallyHidden will render the overlay in the open state, but with opacity 0\n            // doing this solves two problems:\n            // on Android focusing an input element will trigger the softkeyboard to show up, which will change the viewport height\n            // on iOS the focus event will break the view by triggering a scrollIntoView event if focus happens while the overlay is below the viewport and body got overflow:hidden\n            // by rendering things with opacity 0 we ensure keyboards and scrollIntoView all happen in a way that match up with what the sheet will look like.\n            // we can then move it to the opening position below the viewport, and animate it into view without worrying about height changes or scrolling overflow:hidden events\n            visuallyHidden: {}\n            // In this state we're activating focus traps, scroll locks and more, this will sometimes trigger soft keyboards and scrollIntoView\n            // @TODO we might want to add a delay here before proceeding to open, to give android and iOS enough time to adjust the viewport when focusing an interactive element\n            activating: {}\n            // Animates from the bottom\n            open: {}\n          }\n        }\n        // Used to fire off the springEnd event\n        end: {}\n        // And finally we're ready to transition to open\n        done: {}\n      }\n    }\n    open: {}\n    // dragging responds to user gestures, which may interrupt the opening state, closing state or snapping\n    // when interrupting an opening event, it fires onSpringEnd(OPEN) before onSpringStart(DRAG)\n    // when interrupting a closing event, it fires onSpringCancel(CLOSE) before onSpringStart(DRAG)\n    // when interrupting a dragging event, it fires onSpringCancel(SNAP) before onSpringStart(DRAG)\n    dragging: {}\n    // snapping happens whenever transitioning to a new snap point, often after dragging\n    snapping: {\n      states: {\n        start: {}\n        snappingSmoothly: {}\n        end: {}\n        done: {}\n      }\n    }\n    resizing: {\n      states: {\n        start: {}\n        resizingSmoothly: {}\n        end: {}\n        done: {}\n      }\n    }\n    closing: {\n      states: {\n        start: {}\n        deactivating: {}\n        closingSmoothly: {}\n        end: {}\n        done: {}\n      }\n    }\n  }\n}\n\ntype OverlayEvent =\n  | { type: 'OPEN' }\n  | {\n      type: 'SNAP'\n      payload: {\n        y: number\n        velocity: number\n        source: 'dragging' | 'custom' | string\n      }\n    }\n  | { type: 'CLOSE' }\n  | { type: 'DRAG' }\n  | { type: 'RESIZE' }\n\n// The context (extended state) of the machine\ninterface OverlayContext {\n  initialState: 'OPEN' | 'CLOSED'\n}\nfunction sleep(ms = 1000) {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nconst cancelOpen = {\n  CLOSE: { target: '#overlay.closing', actions: 'onOpenCancel' },\n}\nconst openToDrag = {\n  DRAG: { target: '#overlay.dragging', actions: 'onOpenEnd' },\n}\nconst openToResize = {\n  RESIZE: { target: '#overlay.resizing', actions: 'onOpenEnd' },\n}\n\nconst initiallyOpen = ({ initialState }) => initialState === 'OPEN'\nconst initiallyClosed = ({ initialState }) => initialState === 'CLOSED'\n\n// Copy paste the machine into https://xstate.js.org/viz/ to make sense of what's going on in here ;)\n\nexport const overlayMachine = Machine<\n  OverlayContext,\n  OverlayStateSchema,\n  OverlayEvent\n>(\n  {\n    id: 'overlay',\n    initial: 'closed',\n    context: { initialState: 'CLOSED' },\n    states: {\n      closed: { on: { OPEN: 'opening', CLOSE: undefined } },\n      opening: {\n        initial: 'start',\n        states: {\n          start: {\n            invoke: {\n              src: 'onOpenStart',\n              onDone: 'transition',\n            },\n          },\n          transition: {\n            always: [\n              { target: 'immediately', cond: 'initiallyOpen' },\n              { target: 'smoothly', cond: 'initiallyClosed' },\n            ],\n          },\n          immediately: {\n            initial: 'open',\n            states: {\n              open: {\n                invoke: { src: 'openImmediately', onDone: 'activating' },\n              },\n              activating: {\n                invoke: { src: 'activate', onDone: '#overlay.opening.end' },\n                on: { ...openToDrag, ...openToResize },\n              },\n            },\n          },\n          smoothly: {\n            initial: 'visuallyHidden',\n            states: {\n              visuallyHidden: {\n                invoke: { src: 'renderVisuallyHidden', onDone: 'activating' },\n              },\n              activating: {\n                invoke: { src: 'activate', onDone: 'open' },\n              },\n              open: {\n                invoke: { src: 'openSmoothly', onDone: '#overlay.opening.end' },\n                on: { ...openToDrag, ...openToResize },\n              },\n            },\n          },\n          end: {\n            invoke: { src: 'onOpenEnd', onDone: 'done' },\n            on: { CLOSE: '#overlay.closing', DRAG: '#overlay.dragging' },\n          },\n          done: {\n            type: 'final',\n          },\n        },\n        on: { ...cancelOpen },\n        onDone: 'open',\n      },\n      open: {\n        on: { DRAG: '#overlay.dragging', SNAP: 'snapping', RESIZE: 'resizing' },\n      },\n      dragging: {\n        on: { SNAP: 'snapping' },\n      },\n      snapping: {\n        initial: 'start',\n        states: {\n          start: {\n            invoke: {\n              src: 'onSnapStart',\n              onDone: 'snappingSmoothly',\n            },\n            entry: [\n              assign({\n                // @ts-expect-error\n                y: (_, { payload: { y } }) => y,\n                velocity: (_, { payload: { velocity } }) => velocity,\n                snapSource: (_, { payload: { source = 'custom' } }) => source,\n              }),\n            ],\n          },\n          snappingSmoothly: {\n            invoke: { src: 'snapSmoothly', onDone: 'end' },\n          },\n          end: {\n            invoke: { src: 'onSnapEnd', onDone: 'done' },\n            on: {\n              RESIZE: '#overlay.resizing',\n              SNAP: '#overlay.snapping',\n              CLOSE: '#overlay.closing',\n              DRAG: '#overlay.dragging',\n            },\n          },\n          done: { type: 'final' },\n        },\n        on: {\n          SNAP: { target: 'snapping', actions: 'onSnapEnd' },\n          RESIZE: { target: '#overlay.resizing', actions: 'onSnapCancel' },\n          DRAG: { target: '#overlay.dragging', actions: 'onSnapCancel' },\n          CLOSE: { target: '#overlay.closing', actions: 'onSnapCancel' },\n        },\n        onDone: 'open',\n      },\n      resizing: {\n        initial: 'start',\n        states: {\n          start: {\n            invoke: {\n              src: 'onResizeStart',\n              onDone: 'resizingSmoothly',\n            },\n          },\n          resizingSmoothly: {\n            invoke: { src: 'resizeSmoothly', onDone: 'end' },\n          },\n          end: {\n            invoke: { src: 'onResizeEnd', onDone: 'done' },\n            on: {\n              SNAP: '#overlay.snapping',\n              CLOSE: '#overlay.closing',\n              DRAG: '#overlay.dragging',\n            },\n          },\n          done: { type: 'final' },\n        },\n        on: {\n          RESIZE: { target: 'resizing', actions: 'onResizeEnd' },\n          SNAP: { target: 'snapping', actions: 'onResizeCancel' },\n          DRAG: { target: '#overlay.dragging', actions: 'onResizeCancel' },\n          CLOSE: { target: '#overlay.closing', actions: 'onResizeCancel' },\n        },\n        onDone: 'open',\n      },\n      closing: {\n        initial: 'start',\n        states: {\n          start: {\n            invoke: {\n              src: 'onCloseStart',\n              onDone: 'deactivating',\n            },\n            on: { OPEN: { target: '#overlay.open', actions: 'onCloseCancel' } },\n          },\n          deactivating: {\n            invoke: { src: 'deactivate', onDone: 'closingSmoothly' },\n          },\n          closingSmoothly: {\n            invoke: { src: 'closeSmoothly', onDone: 'end' },\n          },\n          end: {\n            invoke: { src: 'onCloseEnd', onDone: 'done' },\n            on: {\n              OPEN: { target: '#overlay.opening', actions: 'onCloseCancel' },\n            },\n          },\n          done: { type: 'final' },\n        },\n        on: {\n          CLOSE: undefined,\n          OPEN: { target: '#overlay.opening', actions: 'onCloseCancel' },\n        },\n        onDone: 'closed',\n      },\n    },\n    on: {\n      CLOSE: 'closing',\n    },\n  },\n  {\n    actions: {\n      onOpenCancel: (context, event) => {\n        console.log('onOpenCancel', { context, event })\n      },\n      onSnapCancel: (context, event) => {\n        console.log('onSnapCancel', { context, event })\n      },\n      onResizeCancel: (context, event) => {\n        console.log('onResizeCancel', { context, event })\n      },\n      onCloseCancel: (context, event) => {\n        console.log('onCloseCancel', { context, event })\n      },\n      onOpenEnd: (context, event) => {\n        console.log('onOpenCancel', { context, event })\n      },\n      onSnapEnd: (context, event) => {\n        console.log('onSnapEnd', { context, event })\n      },\n      onRezizeEnd: (context, event) => {\n        console.log('onRezizeEnd', { context, event })\n      },\n    },\n    services: {\n      onSnapStart: async () => {\n        await sleep()\n      },\n      onOpenStart: async () => {\n        await sleep()\n      },\n      onCloseStart: async () => {\n        await sleep()\n      },\n      onResizeStart: async () => {\n        await sleep()\n      },\n      onSnapEnd: async () => {\n        await sleep()\n      },\n      onOpenEnd: async () => {\n        await sleep()\n      },\n      onCloseEnd: async () => {\n        await sleep()\n      },\n      onResizeEnd: async () => {\n        await sleep()\n      },\n      renderVisuallyHidden: async (context, event) => {\n        console.group('renderVisuallyHidden')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      activate: async (context, event) => {\n        console.group('activate')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      deactivate: async (context, event) => {\n        console.group('deactivate')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      openSmoothly: async (context, event) => {\n        console.group('openSmoothly')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      openImmediately: async (context, event) => {\n        console.group('openImmediately')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      snapSmoothly: async (context, event) => {\n        console.group('snapSmoothly')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      resizeSmoothly: async (context, event) => {\n        console.group('resizeSmoothly')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      closeSmoothly: async (context, event) => {\n        console.group('closeSmoothly')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n    },\n    guards: { initiallyClosed, initiallyOpen },\n  }\n)\n","//\n// In order to greatly reduce complexity this component is designed to always transition to open on mount, and then\n// transition to a closed state later. This ensures that all memory used to keep track of animation and gesture state\n// can be reclaimed after the sheet is closed and then unmounted.\n// It also ensures that when transitioning to open on mount the state is always clean, not affected by previous states that could\n// cause race conditions.\n\nimport { useMachine } from '@xstate/react'\nimport React, {\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n} from 'react'\nimport { animated, config } from 'react-spring'\nimport { rubberbandIfOutOfBounds, useDrag } from 'react-use-gesture'\nimport {\n  useAriaHider,\n  useFocusTrap,\n  useLayoutEffect,\n  useReady,\n  useReducedMotion,\n  useScrollLock,\n  useSnapPoints,\n  useSpring,\n  useSpringInterpolations,\n} from './hooks'\nimport { overlayMachine } from './machines/overlay'\nimport type {\n  defaultSnapProps,\n  Props,\n  RefHandles,\n  ResizeSource,\n  SnapPointProps,\n} from './types'\nimport { debugging } from './utils'\n\nconst { tension, friction } = config.default\n\n// @TODO implement AbortController to deal with race conditions\n\n// @TODO rename to SpringBottomSheet and allow userland to import it directly, for those who want maximum control and minimal bundlesize\nexport const BottomSheet = React.forwardRef<\n  RefHandles,\n  {\n    initialState: 'OPEN' | 'CLOSED'\n    lastSnapRef: React.MutableRefObject<number | null>\n  } & Props\n>(function BottomSheetInternal(\n  {\n    children,\n    sibling,\n    className,\n    footer,\n    header,\n    open: _open,\n    initialState,\n    lastSnapRef,\n    initialFocusRef,\n    onDismiss,\n    maxHeight: controlledMaxHeight,\n    defaultSnap: getDefaultSnap = _defaultSnap,\n    snapPoints: getSnapPoints = _snapPoints,\n    blocking = true,\n    scrollLocking = true,\n    style,\n    onSpringStart,\n    onSpringCancel,\n    onSpringEnd,\n    reserveScrollBarGap = blocking,\n    expandOnContentDrag = false,\n    ...props\n  },\n  forwardRef\n) {\n  // Before any animations can start we need to measure a few things, like the viewport and the dimensions of content, and header + footer if they exist\n  // @TODO make ready its own state perhaps, before open or closed\n  const { ready, registerReady } = useReady()\n\n  // Controls the drag handler, used by spring operations that happen outside the render loop in React\n  const canDragRef = useRef(false)\n\n  // This way apps don't have to remember to wrap their callbacks in useCallback to avoid breaking the sheet\n  const onSpringStartRef = useRef(onSpringStart)\n  const onSpringCancelRef = useRef(onSpringCancel)\n  const onSpringEndRef = useRef(onSpringEnd)\n  useEffect(() => {\n    onSpringStartRef.current = onSpringStart\n    onSpringCancelRef.current = onSpringCancel\n    onSpringEndRef.current = onSpringEnd\n  }, [onSpringCancel, onSpringStart, onSpringEnd])\n\n  // Behold, the engine of it all!\n  const [spring, set] = useSpring()\n\n  const containerRef = useRef<HTMLDivElement>(null)\n  const scrollRef = useRef<HTMLDivElement>(null)\n  const contentRef = useRef<HTMLDivElement>(null)\n  const headerRef = useRef<HTMLDivElement>(null)\n  const footerRef = useRef<HTMLDivElement>(null)\n  const overlayRef = useRef<HTMLDivElement | null>(null)\n\n  // Keeps track of the current height, or the height transitioning to\n  const heightRef = useRef(0)\n  const resizeSourceRef = useRef<ResizeSource>()\n  const preventScrollingRef = useRef(false)\n\n  const prefersReducedMotion = useReducedMotion()\n\n  // \"Plugins\" huhuhu\n  const scrollLockRef = useScrollLock({\n    targetRef: scrollRef,\n    enabled: ready && scrollLocking,\n    reserveScrollBarGap,\n  })\n  const ariaHiderRef = useAriaHider({\n    targetRef: containerRef,\n    enabled: ready && blocking,\n  })\n  const focusTrapRef = useFocusTrap({\n    targetRef: containerRef,\n    fallbackRef: overlayRef,\n    initialFocusRef: initialFocusRef || undefined,\n    enabled: ready && blocking && initialFocusRef !== false,\n  })\n\n  const { minSnap, maxSnap, maxHeight, findSnap } = useSnapPoints({\n    contentRef,\n    controlledMaxHeight,\n    footerEnabled: !!footer,\n    footerRef,\n    getSnapPoints,\n    headerEnabled: header !== false,\n    headerRef,\n    heightRef,\n    lastSnapRef,\n    ready,\n    registerReady,\n    resizeSourceRef,\n  })\n\n  // Setup refs that are used in cases where full control is needed over when a side effect is executed\n  const maxHeightRef = useRef(maxHeight)\n  const minSnapRef = useRef(minSnap)\n  const maxSnapRef = useRef(maxSnap)\n  const findSnapRef = useRef(findSnap)\n  const defaultSnapRef = useRef(0)\n  // Sync the refs with current state, giving the spring full control over when to respond to changes\n  useLayoutEffect(() => {\n    maxHeightRef.current = maxHeight\n    maxSnapRef.current = maxSnap\n    minSnapRef.current = minSnap\n    findSnapRef.current = findSnap\n    defaultSnapRef.current = findSnap(getDefaultSnap)\n  }, [findSnap, getDefaultSnap, maxHeight, maxSnap, minSnap])\n\n  // New utility for using events safely\n  const asyncSet = useCallback<typeof set>(\n    // @ts-expect-error\n    ({ onRest, config: { velocity = 1, ...config } = {}, ...opts }) =>\n      // new Promise((resolve) =>\n      //   set({\n      //     ...opts,\n      //     config: {\n      //       velocity,\n      //       ...config,\n      //       // @see https://springs.pomb.us\n      //       mass: 1,\n      //       // \"stiffness\"\n      //       tension,\n      //       // \"damping\"\n      //       friction: Math.max(\n      //         friction,\n      //         friction + (friction - friction * velocity)\n      //       ),\n      //     },\n      //     onRest: (...args) => {\n      //       resolve(...args)\n      //       onRest?.(...args)\n      //     },\n      //   })\n      // ),\n      set({\n        ...opts,\n        config: {\n          velocity,\n          ...config,\n          // @see https://springs.pomb\n          mass: 1,\n          // \"stiffness\"\n          tension,\n          // \"damping\"\n          friction: Math.max(\n            friction,\n            friction + (friction - friction * velocity)\n          ),\n        },\n        onRest,\n      }),\n    [set]\n  )\n  const [current, send] = useMachine(overlayMachine, {\n    devTools: debugging,\n    actions: {\n      onOpenCancel: useCallback(\n        () => onSpringCancelRef.current?.({ type: 'OPEN' }),\n        []\n      ),\n      onSnapCancel: useCallback(\n        (context) =>\n          onSpringCancelRef.current?.({\n            type: 'SNAP',\n            source: context.initialState,\n          }),\n        []\n      ),\n      onCloseCancel: useCallback(\n        () => onSpringCancelRef.current?.({ type: 'CLOSE' }),\n        []\n      ),\n      onResizeCancel: useCallback(\n        () =>\n          onSpringCancelRef.current?.({\n            type: 'RESIZE',\n            source: resizeSourceRef.current,\n          }),\n        []\n      ),\n      onOpenEnd: useCallback(\n        () => onSpringEndRef.current?.({ type: 'OPEN' }),\n        []\n      ),\n      onSnapEnd: useCallback(\n        (context, event) =>\n          onSpringEndRef.current?.({\n            type: 'SNAP',\n            source: context.initialState,\n          }),\n        []\n      ),\n      onResizeEnd: useCallback(\n        () =>\n          onSpringEndRef.current?.({\n            type: 'RESIZE',\n            source: resizeSourceRef.current,\n          }),\n        []\n      ),\n    },\n    context: { initialState },\n    services: {\n      onSnapStart: useCallback(\n        async (context, event) =>\n          onSpringStartRef.current?.({\n            type: 'SNAP',\n            source: event.payload.source || 'custom',\n          }),\n        []\n      ),\n      onOpenStart: useCallback(\n        async () => onSpringStartRef.current?.({ type: 'OPEN' }),\n        []\n      ),\n      onCloseStart: useCallback(\n        async () => onSpringStartRef.current?.({ type: 'CLOSE' }),\n        []\n      ),\n      onResizeStart: useCallback(\n        async () =>\n          onSpringStartRef.current?.({\n            type: 'RESIZE',\n            source: resizeSourceRef.current,\n          }),\n        []\n      ),\n      onSnapEnd: useCallback(\n        async (context, event) =>\n          onSpringEndRef.current?.({\n            type: 'SNAP',\n            source: context.snapSource,\n          }),\n        []\n      ),\n      onOpenEnd: useCallback(\n        async () => onSpringEndRef.current?.({ type: 'OPEN' }),\n        []\n      ),\n      onCloseEnd: useCallback(\n        async () => onSpringEndRef.current?.({ type: 'CLOSE' }),\n        []\n      ),\n      onResizeEnd: useCallback(\n        async () =>\n          onSpringEndRef.current?.({\n            type: 'RESIZE',\n            source: resizeSourceRef.current,\n          }),\n        []\n      ),\n      renderVisuallyHidden: useCallback(\n        async (context, event) => {\n          await asyncSet({\n            y: defaultSnapRef.current,\n            ready: 0,\n            maxHeight: maxHeightRef.current,\n            maxSnap: maxSnapRef.current,\n            // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\n            minSnap: defaultSnapRef.current,\n            immediate: true,\n          })\n        },\n        [asyncSet]\n      ),\n      activate: useCallback(\n        async (context, event) => {\n          canDragRef.current = true\n          await Promise.all([\n            scrollLockRef.current.activate(),\n            focusTrapRef.current.activate(),\n            ariaHiderRef.current.activate(),\n          ])\n        },\n        [ariaHiderRef, focusTrapRef, scrollLockRef]\n      ),\n      deactivate: useCallback(async () => {\n        scrollLockRef.current.deactivate()\n        focusTrapRef.current.deactivate()\n        ariaHiderRef.current.deactivate()\n        canDragRef.current = false\n      }, [ariaHiderRef, focusTrapRef, scrollLockRef]),\n      openImmediately: useCallback(async () => {\n        heightRef.current = defaultSnapRef.current\n        await asyncSet({\n          y: defaultSnapRef.current,\n          ready: 1,\n          maxHeight: maxHeightRef.current,\n          maxSnap: maxSnapRef.current,\n          // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\n          minSnap: defaultSnapRef.current,\n          immediate: true,\n        })\n      }, [asyncSet]),\n      openSmoothly: useCallback(async () => {\n        await asyncSet({\n          y: 0,\n          ready: 1,\n          maxHeight: maxHeightRef.current,\n          maxSnap: maxSnapRef.current,\n          // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\n          minSnap: defaultSnapRef.current,\n          immediate: true,\n        })\n\n        heightRef.current = defaultSnapRef.current\n\n        await asyncSet({\n          y: defaultSnapRef.current,\n          ready: 1,\n          maxHeight: maxHeightRef.current,\n          maxSnap: maxSnapRef.current,\n          // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\n          minSnap: defaultSnapRef.current,\n          immediate: prefersReducedMotion.current,\n        })\n      }, [asyncSet, prefersReducedMotion]),\n      snapSmoothly: useCallback(\n        async (context, event) => {\n          const snap = findSnapRef.current(context.y)\n          heightRef.current = snap\n          lastSnapRef.current = snap\n          await asyncSet({\n            y: snap,\n            ready: 1,\n            maxHeight: maxHeightRef.current,\n            maxSnap: maxSnapRef.current,\n            minSnap: minSnapRef.current,\n            immediate: prefersReducedMotion.current,\n            config: { velocity: context.velocity },\n          })\n        },\n        [asyncSet, lastSnapRef, prefersReducedMotion]\n      ),\n      resizeSmoothly: useCallback(async () => {\n        const snap = findSnapRef.current(heightRef.current)\n        heightRef.current = snap\n        lastSnapRef.current = snap\n        await asyncSet({\n          y: snap,\n          ready: 1,\n          maxHeight: maxHeightRef.current,\n          maxSnap: maxSnapRef.current,\n          minSnap: minSnapRef.current,\n          immediate:\n            resizeSourceRef.current === 'element'\n              ? prefersReducedMotion.current\n              : true,\n        })\n      }, [asyncSet, lastSnapRef, prefersReducedMotion]),\n      closeSmoothly: useCallback(\n        async (context, event) => {\n          // Avoid animating the height property on close and stay within FLIP bounds by upping the minSnap\n          asyncSet({\n            minSnap: heightRef.current,\n            immediate: true,\n          })\n\n          heightRef.current = 0\n\n          await asyncSet({\n            y: 0,\n            maxHeight: maxHeightRef.current,\n            maxSnap: maxSnapRef.current,\n            immediate: prefersReducedMotion.current,\n          })\n\n          await asyncSet({ ready: 0, immediate: true })\n        },\n        [asyncSet, prefersReducedMotion]\n      ),\n    },\n  })\n\n  useEffect(() => {\n    if (!ready) return\n\n    if (_open) {\n      send('OPEN')\n    } else {\n      send('CLOSE')\n    }\n  }, [_open, send, ready])\n  useLayoutEffect(() => {\n    // Adjust the height whenever the snap points are changed due to resize events\n    if (maxHeight || maxSnap || minSnap) {\n      send('RESIZE')\n    }\n  }, [maxHeight, maxSnap, minSnap, send])\n  useEffect(\n    () => () => {\n      // Ensure effects are cleaned up on unmount, in case they're not cleaned up otherwise\n      scrollLockRef.current.deactivate()\n      focusTrapRef.current.deactivate()\n      ariaHiderRef.current.deactivate()\n    },\n    [ariaHiderRef, focusTrapRef, scrollLockRef]\n  )\n\n  useImperativeHandle(\n    forwardRef,\n    () => ({\n      snapTo: (numberOrCallback, { velocity = 1, source = 'custom' } = {}) => {\n        send('SNAP', {\n          payload: {\n            y: findSnapRef.current(numberOrCallback),\n            velocity,\n            source,\n          },\n        })\n      },\n      get height() {\n        return heightRef.current\n      },\n    }),\n    [send]\n  )\n\n  useEffect(() => {\n    const elem = scrollRef.current\n\n    const preventScrolling = (e) => {\n      if (preventScrollingRef.current) {\n        e.preventDefault()\n      }\n    }\n\n    const preventSafariOverscroll = (e) => {\n      if (elem.scrollTop < 0) {\n        requestAnimationFrame(() => {\n          elem.style.overflow = 'hidden'\n          elem.scrollTop = 0\n          elem.style.removeProperty('overflow')\n        })\n        e.preventDefault()\n      }\n    }\n\n    if (expandOnContentDrag) {\n      elem.addEventListener('scroll', preventScrolling)\n      elem.addEventListener('touchmove', preventScrolling)\n      elem.addEventListener('touchstart', preventSafariOverscroll)\n    }\n    return () => {\n      elem.removeEventListener('scroll', preventScrolling)\n      elem.removeEventListener('touchmove', preventScrolling)\n      elem.removeEventListener('touchstart', preventSafariOverscroll)\n    }\n  }, [expandOnContentDrag, scrollRef])\n\n  const handleDrag = ({\n    args: [{ closeOnTap = false, isContentDragging = false } = {}] = [],\n    cancel,\n    direction: [, direction],\n    down,\n    first,\n    last,\n    memo = spring.y.get() as number,\n    movement: [, _my],\n    tap,\n    velocity,\n  }) => {\n    const my = _my * -1\n\n    // Cancel the drag operation if the canDrag state changed\n    if (!canDragRef.current) {\n      console.log('handleDrag cancelled dragging because canDragRef is false')\n      cancel()\n      return memo\n    }\n\n    if (onDismiss && closeOnTap && tap) {\n      cancel()\n      // Runs onDismiss in a timeout to avoid tap events on the backdrop from triggering click events on elements underneath\n      setTimeout(() => onDismiss(), 0)\n      return memo\n    }\n\n    // Filter out taps\n    if (tap) {\n      return memo\n    }\n\n    const rawY = memo + my\n    const predictedDistance = my * velocity\n    const predictedY = Math.max(\n      minSnapRef.current,\n      Math.min(maxSnapRef.current, rawY + predictedDistance * 2)\n    )\n\n    if (\n      !down &&\n      onDismiss &&\n      direction > 0 &&\n      rawY + predictedDistance < minSnapRef.current / 2\n    ) {\n      cancel()\n      onDismiss()\n      return memo\n    }\n\n    let newY = down\n      ? // @TODO figure out a better way to deal with rubberband overshooting if min and max have the same value\n        !onDismiss && minSnapRef.current === maxSnapRef.current\n        ? rawY < minSnapRef.current\n          ? rubberbandIfOutOfBounds(\n              rawY,\n              minSnapRef.current,\n              maxSnapRef.current * 2,\n              0.55\n            )\n          : rubberbandIfOutOfBounds(\n              rawY,\n              minSnapRef.current / 2,\n              maxSnapRef.current,\n              0.55\n            )\n        : rubberbandIfOutOfBounds(\n            rawY,\n            onDismiss ? 0 : minSnapRef.current,\n            maxSnapRef.current,\n            0.55\n          )\n      : predictedY\n\n    if (expandOnContentDrag && isContentDragging) {\n      if (newY >= maxSnapRef.current) {\n        newY = maxSnapRef.current\n      }\n\n      if (memo === maxSnapRef.current && scrollRef.current.scrollTop > 0) {\n        newY = maxSnapRef.current\n      }\n\n      preventScrollingRef.current = newY < maxSnapRef.current\n    } else {\n      preventScrollingRef.current = false\n    }\n\n    if (first) {\n      send('DRAG')\n    }\n\n    if (last) {\n      send('SNAP', {\n        payload: {\n          y: newY,\n          velocity: velocity > 0.05 ? velocity : 1,\n          source: 'dragging',\n        },\n      })\n\n      return memo\n    }\n\n    // @TODO too many rerenders\n    //send('DRAG', { y: newY, velocity })\n    //*\n    set({\n      y: newY,\n      ready: 1,\n      maxHeight: maxHeightRef.current,\n      maxSnap: maxSnapRef.current,\n      minSnap: minSnapRef.current,\n      immediate: true,\n      config: { velocity },\n    })\n    // */\n\n    return memo\n  }\n\n  const bind = useDrag(handleDrag, {\n    filterTaps: true,\n  })\n\n  if (Number.isNaN(maxSnapRef.current)) {\n    throw new TypeError('maxSnapRef is NaN!!')\n  }\n  if (Number.isNaN(minSnapRef.current)) {\n    throw new TypeError('minSnapRef is NaN!!')\n  }\n\n  const interpolations = useSpringInterpolations({ spring })\n\n  return (\n    <animated.div\n      {...props}\n      data-rsbs-root\n      data-rsbs-state={publicStates.find(current.matches)}\n      data-rsbs-is-blocking={blocking}\n      data-rsbs-is-dismissable={!!onDismiss}\n      data-rsbs-has-header={!!header}\n      data-rsbs-has-footer={!!footer}\n      className={className}\n      ref={containerRef}\n      style={{\n        // spread in the interpolations yeees\n        ...interpolations,\n        // but allow overriding them/disabling them\n        ...style,\n        // Not overridable as the \"focus lock with opacity 0\" trick rely on it\n        // @TODO the line below only fails on TS <4\n        // @ts-ignore\n        opacity: spring.ready,\n      }}\n    >\n      {sibling}\n      {blocking && (\n        <div\n          // This component needs to be placed outside bottom-sheet, as bottom-sheet uses transform and thus creates a new context\n          // that clips this element to the container, not allowing it to cover the full page.\n          key=\"backdrop\"\n          data-rsbs-backdrop\n          {...bind({ closeOnTap: true })}\n        />\n      )}\n      <div\n        key=\"overlay\"\n        aria-modal=\"true\"\n        role=\"dialog\"\n        data-rsbs-overlay\n        tabIndex={-1}\n        ref={overlayRef}\n        onKeyDown={(event) => {\n          if (event.key === 'Escape') {\n            // Always stop propagation, to avoid weirdness for bottom sheets inside other bottom sheets\n            event.stopPropagation()\n            if (onDismiss) onDismiss()\n          }\n        }}\n      >\n        {header !== false && (\n          <div key=\"header\" data-rsbs-header ref={headerRef} {...bind()}>\n            {header}\n          </div>\n        )}\n        <div\n          key=\"scroll\"\n          data-rsbs-scroll\n          ref={scrollRef}\n          {...(expandOnContentDrag ? bind({ isContentDragging: true }) : {})}\n        >\n          <div data-rsbs-content ref={contentRef}>\n            {children}\n          </div>\n        </div>\n        {footer && (\n          <div key=\"footer\" ref={footerRef} data-rsbs-footer {...bind()}>\n            {footer}\n          </div>\n        )}\n      </div>\n    </animated.div>\n  )\n})\n\n// Used for the data attribute, list over states available to CSS selectors\nconst publicStates = [\n  'closed',\n  'opening',\n  'open',\n  'closing',\n  'dragging',\n  'snapping',\n  'resizing',\n]\n\n// Default prop values that are callbacks, and it's nice to save some memory and reuse their instances since they're pure\nfunction _defaultSnap({ snapPoints, lastSnap }: defaultSnapProps) {\n  return lastSnap ?? Math.min(...snapPoints)\n}\nfunction _snapPoints({ minHeight }: SnapPointProps) {\n  return minHeight\n}\n","// Keeps track of wether everything is good to go or not, in the most efficient way possible\n\nimport { useCallback, useEffect, useState } from 'react'\n\nexport function useReady() {\n  const [ready, setReady] = useState(false)\n  const [readyMap, updateReadyMap] = useState<{ [key: string]: boolean }>({})\n\n  const registerReady = useCallback((key: string) => {\n    console.count(`registerReady:${key}`)\n    // Register the check we're gonna wait for until it's ready\n    updateReadyMap((ready) => ({ ...ready, [key]: false }))\n\n    return () => {\n      console.count(`setReady:${key}`)\n      // Set it to ready\n      updateReadyMap((ready) => ({ ...ready, [key]: true }))\n    }\n  }, [])\n\n  useEffect(() => {\n    const states = Object.values(readyMap)\n\n    if (states.length === 0) {\n      console.log('nope nothing registered yet')\n      return\n    }\n\n    const isReady = states.every(Boolean)\n    console.log('check if we are rready', readyMap, isReady)\n    if (isReady) {\n      console.warn('ready!')\n      setReady(true)\n    }\n  }, [readyMap])\n\n  return { ready, registerReady }\n}\n","import { useDebugValue, useEffect, useMemo, useRef } from 'react'\n\n// @TODO refactor to addEventListener\nexport function useReducedMotion() {\n  const mql = useMemo(\n    () =>\n      typeof window !== 'undefined'\n        ? window.matchMedia('(prefers-reduced-motion: reduce)')\n        : null,\n    []\n  )\n  const ref = useRef(mql?.matches)\n\n  useDebugValue(ref.current ? 'reduce' : 'no-preference')\n\n  useEffect(() => {\n    const handler = (event) => {\n      ref.current = event.matches\n    }\n    mql?.addListener(handler)\n\n    return () => mql?.removeListener(handler)\n  }, [mql])\n\n  return ref\n}\n","import { useSpring as useReactSpring } from 'react-spring'\n\n// Behold, the engine of it all!\n// Put in this file befause it makes it easier to type and I'm lazy! :D\n\nexport function useSpring() {\n  return useReactSpring(() => ({\n    y: 0,\n    ready: 0,\n    maxHeight: 0,\n    minSnap: 0,\n    maxSnap: 0,\n  }))\n}\n\nexport type Spring = ReturnType<typeof useSpring>[0]\nexport type SpringSet = ReturnType<typeof useSpring>[1]\n","import { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock'\nimport { useDebugValue, useEffect, useRef } from 'react'\n\n/**\n * Handle scroll locking to ensure a good dragging experience on Android and iOS.\n *\n * On iOS the following may happen if scroll isn't locked:\n * - When dragging the sheet the background gets dragged at the same time.\n * - When dragging the page scroll is also affected, causing the drag to feel buggy and \"slow\".\n *\n * On Android it causes the chrome toolbar to pop down as you drag down, and hide as you drag up.\n * When it's in between two toolbar states it causes the framerate to drop way below 60fps on\n * the bottom sheet drag interaction.\n */\nexport function useScrollLock({\n  targetRef,\n  enabled,\n  reserveScrollBarGap,\n}: {\n  targetRef: React.RefObject<Element>\n  enabled: boolean\n  reserveScrollBarGap: boolean\n}) {\n  const ref = useRef<{ activate: () => void; deactivate: () => void }>({\n    activate: () => {\n      throw new TypeError('Tried to activate scroll lock too early')\n    },\n    deactivate: () => {},\n  })\n\n  useDebugValue(enabled ? 'Enabled' : 'Disabled')\n\n  useEffect(() => {\n    if (!enabled) {\n      ref.current.deactivate()\n      ref.current = { activate: () => {}, deactivate: () => {} }\n      return\n    }\n\n    const target = targetRef.current\n    let active = false\n\n    ref.current = {\n      activate: () => {\n        if (active) return\n        active = true\n        disableBodyScroll(target, {\n          allowTouchMove: (el) => el.closest('[data-body-scroll-lock-ignore]'),\n          reserveScrollBarGap,\n        })\n      },\n      deactivate: () => {\n        if (!active) return\n        active = false\n        enableBodyScroll(target)\n      },\n    }\n  }, [enabled, targetRef, reserveScrollBarGap])\n\n  return ref\n}\n","import React, { useDebugValue, useEffect, useRef } from 'react'\n\n// Handle hiding and restoring aria-hidden attributes\nexport function useAriaHider({\n  targetRef,\n  enabled,\n}: {\n  targetRef: React.RefObject<Element>\n  enabled: boolean\n}) {\n  const ref = useRef<{ activate: () => void; deactivate: () => void }>({\n    activate: () => {\n      throw new TypeError('Tried to activate aria hider too early')\n    },\n    deactivate: () => {},\n  })\n\n  useDebugValue(enabled ? 'Enabled' : 'Disabled')\n\n  useEffect(() => {\n    if (!enabled) {\n      ref.current.deactivate()\n      ref.current = { activate: () => {}, deactivate: () => {} }\n      return\n    }\n\n    const target = targetRef.current\n    let active = false\n    let originalValues: (null | string)[] = []\n    let rootNodes: Element[] = []\n\n    ref.current = {\n      activate: () => {\n        if (active) return\n        active = true\n\n        const parentNode = target.parentNode\n\n        document.querySelectorAll('body > *').forEach((node) => {\n          if (node === parentNode) {\n            return\n          }\n          let attr = node.getAttribute('aria-hidden')\n          let alreadyHidden = attr !== null && attr !== 'false'\n          if (alreadyHidden) {\n            return\n          }\n          originalValues.push(attr)\n          rootNodes.push(node)\n          node.setAttribute('aria-hidden', 'true')\n        })\n      },\n      deactivate: () => {\n        if (!active) return\n        active = false\n\n        rootNodes.forEach((node, index) => {\n          let originalValue = originalValues[index]\n          if (originalValue === null) {\n            node.removeAttribute('aria-hidden')\n          } else {\n            node.setAttribute('aria-hidden', originalValue)\n          }\n        })\n        originalValues = []\n        rootNodes = []\n      },\n    }\n  }, [targetRef, enabled])\n\n  return ref\n}\n","import { createFocusTrap } from 'focus-trap'\nimport { useDebugValue, useEffect, useRef } from 'react'\n\nexport function useFocusTrap({\n  targetRef,\n  fallbackRef,\n  initialFocusRef,\n  enabled,\n}: {\n  targetRef: React.RefObject<HTMLElement>\n  fallbackRef: React.RefObject<HTMLElement>\n  initialFocusRef?: React.RefObject<HTMLElement>\n  enabled: boolean\n}) {\n  const ref = useRef<{ activate: () => void; deactivate: () => void }>({\n    activate: () => {\n      throw new TypeError('Tried to activate focus trap too early')\n    },\n    deactivate: () => {},\n  })\n\n  useDebugValue(enabled ? 'Enabled' : 'Disabled')\n\n  useEffect(() => {\n    if (!enabled) {\n      ref.current.deactivate()\n      ref.current = { activate: () => {}, deactivate: () => {} }\n      return\n    }\n\n    const fallback = fallbackRef.current\n    const trap = createFocusTrap(targetRef.current, {\n      onActivate:\n        process.env.NODE_ENV !== 'production'\n          ? () => {\n              console.log('focus activate')\n            }\n          : undefined,\n      // If initialFocusRef is manually specified we don't want the first tabbable element to receive focus if initialFocusRef can't be found\n      initialFocus: initialFocusRef\n        ? () => initialFocusRef?.current || fallback\n        : undefined,\n      fallbackFocus: fallback,\n      escapeDeactivates: false,\n      clickOutsideDeactivates: false,\n    })\n    let active = false\n\n    ref.current = {\n      activate: async () => {\n        if (active) return\n        active = true\n\n        await trap.activate()\n        // it's difficult to know exactly when focus is udpated https://github.com/focus-trap/focus-trap/blob/036a72ec48b85414dda00ec0c40d631c8f0ae5ce/index.js#L369-L371\n        // This timeout is attempting to compromise between a reasonable guess, as well as not delaying the open transition more than necessary\n        await new Promise((resolve) => setTimeout(() => resolve(void 1), 0))\n      },\n      deactivate: () => {\n        if (!active) return\n        active = false\n\n        trap.deactivate()\n      },\n    }\n  }, [enabled, fallbackRef, initialFocusRef, targetRef])\n\n  return ref\n}\n","import { interpolate } from 'react-spring'\nimport type { Spring } from './useSpring'\nimport { clamp } from '../utils'\n\n// It's a bit easier to ensure interpolations don't accidentally use the wrong variables by\n// putting them here, in their own closure with explicitly defined variables used\n\n// Note that the callbacks in the interpolation functions close over their scope every time react renders\n// so it's important that if anything can change outside of render that needs to be available\n// in the interpolation then a ref must be used\n\nexport function useSpringInterpolations({\n  spring,\n}: {\n  spring: Spring\n}): React.CSSProperties {\n  // This effect is for removing rounded corners on phones when the sheet touches the top of the browser chrome\n  // as it's really ugly with the gaps border radius creates. This ensures it looks sleek.\n  // @TODO the ts-ignore comments are because the `extrapolate` param isn't in the TS defs for some reason\n  const interpolateBorderRadius = interpolate(\n    [spring.y, spring.maxHeight],\n    (y, maxHeight) => {\n      return `${Math.round(clamp(maxHeight - y, 0, 16))}px`\n    }\n  )\n\n  /*\n   * Only animate the height when absolute necessary\n   * @TODO currently it's only able to opt out of changing the height if there's just a single snapshot\n   *       but it should be possible to do it in other scenarios too, like on window resize,\n   *       or maybe even while dragging, but probably requires a more restrictive CSS.\n   *       As in now the sticky footer isn't overlapping the content, allowing `backdrop-filter: blur(8px)` effects.\n   *       A FLIP resize flow for content height would likely require the sticky elements to overlap the content area.\n   *       Could be done as a separat mode though, or a separate example CSS for max performance.\n   */\n  const interpolateHeight = interpolate(\n    // @ts-ignore\n    [spring.y, spring.minSnap, spring.maxSnap],\n    (y, minSnap, maxSnap) => `${clamp(y, minSnap, maxSnap)}px`\n  )\n\n  const interpolateY = interpolate(\n    // @ts-ignore\n    [spring.y, spring.minSnap, spring.maxSnap],\n    (y, minSnap, maxSnap) => {\n      if (y < minSnap) {\n        return `${minSnap - y}px`\n      }\n      if (y > maxSnap) {\n        return `${maxSnap - y}px`\n      }\n      return '0px'\n    }\n  )\n\n  const interpolateFiller = interpolate(\n    // @ts-ignore\n    [spring.y, spring.maxSnap],\n    (y, maxSnap) => {\n      if (y >= maxSnap) {\n        return Math.ceil(y - maxSnap)\n      }\n      return 0\n    }\n  )\n\n  const interpolateContentOpacity = interpolate(\n    // @ts-ignore\n    [spring.y, spring.minSnap],\n    (y, minSnap) => {\n      if (!minSnap) {\n        return 0\n      }\n      const minX = Math.max(minSnap / 2 - 45, 0)\n      const maxX = Math.min(minSnap / 2 + 45, minSnap)\n      const minY = 0\n      const maxY = 1\n\n      const slope = (maxY - minY) / (maxX - minX)\n      const res = (y - minX) * (slope + minY)\n      return clamp(res, 0, 1)\n    }\n  )\n\n  const interpolateBackdrop = interpolate(\n    // @ts-ignore\n    [spring.y, spring.minSnap],\n    (y, minSnap) => (minSnap ? clamp(y / minSnap, 0, 1) : 0)\n  )\n\n  return {\n    // Fancy content fade-in effect\n    ['--rsbs-content-opacity' as any]: interpolateContentOpacity,\n    // Fading in the backdrop\n    ['--rsbs-backdrop-opacity' as any]: interpolateBackdrop,\n    // Scaling the antigap in the bottom\n    ['--rsbs-antigap-scale-y' as any]: interpolateFiller,\n    // Shifts the position of the bottom sheet, used on open and close primarily as snap point changes usually only interpolate the height\n    ['--rsbs-overlay-translate-y' as any]: interpolateY,\n    // Remove rounded borders when full height, it looks much better this way\n    ['--rsbs-overlay-rounded' as any]: interpolateBorderRadius,\n    // Animates the height state, not the most performant way but it's the safest with regards to mobile browser and focus/scrolling that could happen while animating\n    ['--rsbs-overlay-h' as any]: interpolateHeight,\n  }\n}\n","/* eslint-disable react/jsx-pascal-case */\nimport Portal from '@reach/portal'\nimport React, { forwardRef, useRef, useState, useCallback } from 'react'\nimport { BottomSheet as _BottomSheet } from './BottomSheet'\nimport type { Props, RefHandles, SpringEvent } from './types'\nimport { useLayoutEffect } from './hooks'\n\nexport type {\n  RefHandles as BottomSheetRef,\n  Props as BottomSheetProps,\n} from './types'\n\n// Because SSR is annoying to deal with, and all the million complaints about window, navigator and dom elenents!\nexport const BottomSheet = forwardRef<RefHandles, Props>(function BottomSheet(\n  { onSpringStart, onSpringEnd, skipInitialTransition, ...props },\n  ref\n) {\n  // Mounted state, helps SSR but also ensures you can't tab into the sheet while it's closed, or nav there in a screen reader\n  const [mounted, setMounted] = useState(false)\n  const timerRef = useRef<ReturnType<typeof requestAnimationFrame>>()\n  // The last point that the user snapped to, useful for open/closed toggling and the user defined height is remembered\n  const lastSnapRef = useRef(null)\n  // @TODO refactor to an initialState: OPEN | CLOSED property as it's much easier to understand\n  // And informs what we should animate from. If the sheet is mounted with open = true, then initialState = OPEN.\n  // When initialState = CLOSED, then internal sheet must first render with open={false} before setting open={props.open}\n  // It's only when initialState and props.open is mismatching that a intial transition should happen\n  // If they match then transitions will only happen when a user interaction or resize event happen.\n  const initialStateRef = useRef<'OPEN' | 'CLOSED'>(\n    skipInitialTransition && props.open ? 'OPEN' : 'CLOSED'\n  )\n\n  // Using layout effect to support cases where the bottom sheet have to appear already open, no transition\n  useLayoutEffect(() => {\n    if (props.open) {\n      cancelAnimationFrame(timerRef.current)\n      setMounted(true)\n\n      // Cleanup defaultOpen state on close\n      return () => {\n        initialStateRef.current = 'CLOSED'\n      }\n    }\n  }, [props.open])\n\n  const handleSpringStart = useCallback(\n    async function handleSpringStart(event: SpringEvent) {\n      // Forward the event\n      await onSpringStart?.(event)\n\n      if (event.type === 'OPEN') {\n        // Ensures that when it's opening we abort any pending unmount action\n        cancelAnimationFrame(timerRef.current)\n      }\n    },\n    [onSpringStart]\n  )\n\n  const handleSpringEnd = useCallback(\n    async function handleSpringEnd(event: SpringEvent) {\n      // Forward the event\n      await onSpringEnd?.(event)\n\n      if (event.type === 'CLOSE') {\n        // Unmount from the dom to avoid contents being tabbable or visible to screen readers while closed\n        timerRef.current = requestAnimationFrame(() => setMounted(false))\n      }\n    },\n    [onSpringEnd]\n  )\n\n  // This isn't just a performance optimization, it's also to avoid issues when running a non-browser env like SSR\n  if (!mounted) {\n    return null\n  }\n\n  return (\n    <Portal data-rsbs-portal>\n      <_BottomSheet\n        {...props}\n        lastSnapRef={lastSnapRef}\n        ref={ref}\n        initialState={initialStateRef.current}\n        onSpringStart={handleSpringStart}\n        onSpringEnd={handleSpringEnd}\n      />\n    </Portal>\n  )\n})\n"],"names":["useLayoutEffect","window","useLayoutEffectSafely","useEffect","clamp","number","lower","upper","roundAndCheckForNaN","unrounded","rounded","Math","round","Number","isNaN","TypeError","observerOptions","box","useElementSizeObserver","ref","_ref3","label","enabled","resizeSourceRef","_useState","useState","size","setSize","useDebugValue","handleResize","useCallback","entries","borderBoxSize","blockSize","current","resizeObserver","ResizeObserver","observe","disconnect","sleep","ms","Promise","resolve","setTimeout","openToDrag","DRAG","target","actions","openToResize","RESIZE","overlayMachine","Machine","id","initial","context","initialState","states","closed","on","OPEN","CLOSE","undefined","opening","start","invoke","src","onDone","transition","always","cond","immediately","open","activating","_extends","smoothly","visuallyHidden","end","done","type","SNAP","dragging","snapping","entry","assign","y","_","payload","velocity","_ref4","snapSource","_ref5","_ref5$payload$source","source","snappingSmoothly","resizing","resizingSmoothly","closing","deactivating","closingSmoothly","onOpenCancel","event","onSnapCancel","onResizeCancel","onCloseCancel","onOpenEnd","onSnapEnd","onRezizeEnd","services","onSnapStart","then","e","reject","onOpenStart","onCloseStart","onResizeStart","onCloseEnd","onResizeEnd","renderVisuallyHidden","activate","deactivate","openSmoothly","openImmediately","snapSmoothly","resizeSmoothly","closeSmoothly","guards","initiallyClosed","_ref2","initiallyOpen","_ref","_config$default","config","default","tension","friction","BottomSheet","React","forwardRef","children","sibling","className","footer","header","_open","lastSnapRef","initialFocusRef","onDismiss","controlledMaxHeight","maxHeight","_ref$defaultSnap","defaultSnap","getDefaultSnap","_defaultSnap","_ref$snapPoints","snapPoints","getSnapPoints","_snapPoints","_ref$blocking","blocking","_ref$scrollLocking","scrollLocking","style","onSpringStart","onSpringCancel","onSpringEnd","_ref$reserveScrollBar","reserveScrollBarGap","_ref$expandOnContentD","expandOnContentDrag","props","_objectWithoutPropertiesLoose","_excluded","_useReady","ready","setReady","_useState2","readyMap","updateReadyMap","registerReady","key","_extends2","_extends3","Object","values","length","every","Boolean","useReady","canDragRef","useRef","onSpringStartRef","onSpringCancelRef","onSpringEndRef","mql","_useSpring","useReactSpring","minSnap","maxSnap","spring","set","containerRef","scrollRef","contentRef","headerRef","footerRef","overlayRef","heightRef","preventScrollingRef","prefersReducedMotion","useMemo","matchMedia","matches","handler","addListener","removeListener","scrollLockRef","targetRef","active","disableBodyScroll","allowTouchMove","el","closest","enableBodyScroll","useScrollLock","ariaHiderRef","originalValues","rootNodes","parentNode","document","querySelectorAll","forEach","node","attr","getAttribute","push","setAttribute","index","originalValue","removeAttribute","useAriaHider","focusTrapRef","fallbackRef","fallback","trap","createFocusTrap","onActivate","initialFocus","fallbackFocus","escapeDeactivates","clickOutsideDeactivates","useFocusTrap","_useSnapPoints","_useDimensions","footerEnabled","headerEnabled","innerHeight","setMaxHeight","raf","requestAnimationFrame","addEventListener","removeEventListener","cancelAnimationFrame","useMaxHeight","headerHeight","contentHeight","footerHeight","minHeight","min","useDimensions","_processSnapPoints","unsafeSnaps","snapPointsDedupedSet","concat","map","reduce","acc","snapPoint","add","Set","Array","from","apply","max","processSnapPoints","height","findSnap","numberOrCallback","querySnap","lastSnap","prev","curr","abs","useSnapPoints","maxHeightRef","minSnapRef","maxSnapRef","findSnapRef","defaultSnapRef","asyncSet","onRest","_ref2$config","_ref2$config2","_ref2$config2$velocit","_excluded2","opts","_excluded3","mass","_useMachine","useMachine","devTools","immediate","all","snap","send","useImperativeHandle","snapTo","_temp","_ref3$velocity","_ref3$source","elem","preventScrolling","preventDefault","preventSafariOverscroll","scrollTop","overflow","removeProperty","bind","useDrag","_ref4$args","args","_ref4$args2$","_ref4$args2$2","_ref4$args2$2$closeOn","closeOnTap","_ref4$args2$2$isConte","isContentDragging","cancel","direction","down","first","last","_ref4$memo","memo","get","tap","my","movement","rawY","predictedDistance","predictedY","newY","rubberbandIfOutOfBounds","filterTaps","interpolations","interpolateBorderRadius","interpolate","interpolateHeight","interpolateY","interpolateFiller","ceil","interpolateContentOpacity","minX","interpolateBackdrop","useSpringInterpolations","createElement","animated","div","publicStates","find","opacity","role","tabIndex","onKeyDown","stopPropagation","_ref6","skipInitialTransition","mounted","setMounted","timerRef","initialStateRef","handleSpringStart","handleSpringEnd","Portal","_BottomSheet"],"mappings":"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"}